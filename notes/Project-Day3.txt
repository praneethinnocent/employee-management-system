step24:
-------
	Create HeaderComponent inside "components" folder. 

HeaderComponent.js
------------------
import React from 'react'
function HeaderComponent() {
  return (
    <header>
      <nav className='navbar navbar-expand-md navbar-dark bg-dark'>
        <div className='container'>
            <a href='' className='navbar-brand'> Employee Management System</a>
        </div>
      </nav>
    </header>
  )
}
export default HeaderComponent


step25:
-------
	Create FooterComponent inside "components" folder. 

FooterComponent.js 
-------------------
import React from 'react'
import '../App.css';

function FooterComponent() {
  return (
    <footer>
        <div className='footer'>AllRightReserved &copy; by Niyaz Sir</div>
    </footer>
  )
}
export default FooterComponent



step26:
-------
	Add the CSS styles to FooterComponent.js file.

App.css
-------
.footer
{
  position:absolute;
  bottom: 0;
  width:100%;
  height: 30px;
  background-color: black;
  color: white;
  text-align: center;
} 


step27:
-------
	Call HeaderComponent and FooterComponent from App.js file.

App.js file 
-----------
import React from 'react'
import EmployeeListComponent from './components/EmployeeListComponent'
import HeaderComponent from './components/HeaderComponent'
import FooterComponent from './components/FooterComponent'
function App() {
  return (
    <div>
      <HeaderComponent/>

      <div className='container'>
          <EmployeeListComponent/>
      </div>

      <FooterComponent/>

    </div>
  )
}

export default App

step28:
-------
	Install react-router-dom dependency for routing.

	ex:
		npm install react-router-dom 


step29:
-------
	Create a App.js file as a routing file.

App.js 
-------
import React from 'react'
import EmployeeListComponent from './components/EmployeeListComponent'
import HeaderComponent from './components/HeaderComponent'
import FooterComponent from './components/FooterComponent'
import {BrowserRouter,Routes,Route} from 'react-router-dom';

function App() {
  return (
    <div>
      <HeaderComponent/>

      <BrowserRouter>

      <div className='container'>
        <Routes>
          <Route exact path='/' element={<EmployeeListComponent/>}></Route>
          <Route path='/employees' element={<EmployeeListComponent/>}></Route>
        </Routes>
      </div>

      </BrowserRouter>

      <FooterComponent/>

    </div>
  )
}

export default App


step30:
-----
	Check the below request urls for routing.
	ex:
		http://localhost:3000/
		http://localhost:3000/employees 


step31:
-------
	Create a POST method inside EmployeeController.java.


EmployeeController.java
---------------------
package com.ihub.www.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ihub.www.model.Employee;
import com.ihub.www.service.EmployeeService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1/")
public class EmployeeController 
{
	@Autowired
	EmployeeService employeeService;
	
	@GetMapping("/employees")
	public List<Employee> getAllEmployees()
	{
		return employeeService.getAllEmployees();
	}
	
	@PostMapping("/employees")
	public Employee createEmployee(@RequestBody Employee employee)
	{
		return employeeService.createEmployee(employee);
	}
}



step32:
-------
	Add post method inside EmployeeService.java

EmployeeService.java
---------------------
package com.ihub.www.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.ihub.www.model.Employee;
import com.ihub.www.repo.EmployeeRepository;

@Service
public class EmployeeService 
{
	@Autowired
	EmployeeRepository employeeRepository;
	
	
	public List<Employee> getAllEmployees()
	{
		return employeeRepository.findAll();
	}
	
	public Employee createEmployee(Employee employee)
	{
		return employeeRepository.save(employee);
	}
}

step33:
-------
	Add createEmployee() method to post the data inside EmployeeService.js file.

EmployeeService.js
-------------------
import axios from 'axios';

const EMPLOYEE_BASE_API="http://localhost:9090/api/v1/employees";

class EmployeeService
{
    getEmployees()
    {
        return axios.get(EMPLOYEE_BASE_API);
    }

    createEmployee(employee)
    {
        return axios.post(EMPLOYEE_BASE_API,employee);
    }
}
export default new EmployeeService();

step34:
-------
	Create CreateEmployeeComponent.js file inside "components" folder.

CreateEmployeeComponent.js 
---------------------------
import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'

function CreateEmployeeComponent() 
{

    let navigate=useNavigate();

    const [employee,setEmployee]=useState({
        firstName:"",
        lastName:"",
        email:""
    })

    const handleCancel=(e)=>{
        e.preventDefault();
        navigate("/employees");
    }


  return (
    <div className='cotainer mt-3'>
         <div className='card col-md-6 offset-3'>

        <h4 className='text-center pt-3'> Add Employee</h4>
        
         <div className='card-body'>
            <form>
                <label className='my-3'>FirstName:</label>
                <input type="text" name="firstName" id="firstName" className='form-control'/>

                 <label className='my-3'>LastName:</label>
                <input type="text" name="lastName" id="lastName" className='form-control'/>

                 <label className='my-3'>Email:</label>
                <input type="text" name="email" id="email" className='form-control'/>

                  <button className='btn btn-danger mt-3' onClick={handleCancel}> cancel </button>
                  <button className='btn btn-success mt-3 ms-3'> save </button>  
            </form>
         </div>

         </div>
    </div>
  )
}

export default CreateEmployeeComponent




step35:
-------
	Now add CreateEmployeeComponent.js file for routing.

App.js 
--------
import React from 'react'
import EmployeeListComponent from './components/EmployeeListComponent'
import HeaderComponent from './components/HeaderComponent'
import FooterComponent from './components/FooterComponent'
import {BrowserRouter,Routes,Route} from 'react-router-dom';
import CreateEmployeeComponent from './components/CreateEmployeeComponent';

function App() {
  return (
    <div>
      <HeaderComponent/>

      <BrowserRouter>

      <div className='container'>
        <Routes>
          <Route exact path='/' element={<EmployeeListComponent/>}></Route>
          <Route path='/employees' element={<EmployeeListComponent/>}></Route>
          <Route path='/add-employee' element={<CreateEmployeeComponent/>}></Route>
        </Routes>
      </div>

      </BrowserRouter>

      <FooterComponent/>

    </div>
  )
}

export default App


step36:
--------

	Add "Add Employee" button inside "EmployeeListComponent.js" file.

EmployeeListComponent.js 
-----------------------
import {Component} from 'react';
import EmployeeService from '../service/EmployeeService';
import { Link } from 'react-router-dom';

class EmployeeListComponent extends Component
{
    constructor()
    {
        super();

        this.state={
            employees:[]
        }
    }

    componentDidMount()
    {
        EmployeeService.getEmployees().then(res=>{
            this.setState({employees:res.data});
        })
    }

    render()
    {
        return (
             <div className='container mt-5'>
                <h3 className='text-center'>Employee List</h3>

                <div className='row mt-5'>

        <Link to="/add-employee" className='btn btn-primary'> Add Employee </Link>            
                    <table className='table table-bordered table-striped'>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>FIRSTNAME</th>
                                <th>LASTNAME</th>
                                <th>EMAIL</th>
                                <th>ACTIONS</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                this.state.employees.map(employee=>{
                                    return <tr key={employee.id}>
                                                <td>{employee.id}</td>
                                                <td>{employee.firstName}</td>
                                                <td>{employee.lastName}</td>
                                                <td>{employee.email}</td>
                                            </tr>
                                })
                            }
                        </tbody>
                    </table>
                </div>
             </div>   
        )
    }
}
export default EmployeeListComponent;















